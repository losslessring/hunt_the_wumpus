const map =
[
    [ 17, 12, 15 ],
    [ 5, 3, 9 ],
    [ 19, 9, 14 ],
    [ 1, 10, 6 ],
    [ 6, 18, 13 ],
    [ 19, 17, 1 ],
    [ 16, 3, 4 ],
    [ 11, 12, 14 ],
    [ 13, 14, 16 ],
    [ 2, 1, 16 ],
    [ 17, 18, 3 ],
    [ 15, 7, 13 ],
    [ 0, 19, 7 ],
    [ 11, 8, 4 ],
    [ 7, 2, 8 ],
    [ 0, 11, 18 ],
    [ 8, 9, 6 ],
    [ 0, 5, 10 ],
    [ 10, 15, 4 ],
    [ 12, 5, 2 ],
]


const checkArrowRoute = (currentRoom: number) => (availablePassages: number[]) => {
  console.log(currentRoom)
  console.log(availablePassages)
  console.log(' ')
  return availablePassages.includes(currentRoom)
  
}

const shotAction = (heroPosition: number) => (wumpusPosition: number) => (shotRoute: number[]) => (map: number[][]) => {
    
    const shotInitialLocation = [{
      arrowPosition: heroPosition,
      availablePassages: map[heroPosition]
    }]
    
    const arrowFlightLocation = shotRoute.map((arrowPosition, index) => {

        
        return {
                arrowPosition: arrowPosition,
                availablePassages: map[arrowPosition]
               }
    })
    const arrowTotalFlightLocation =  [...shotInitialLocation, ...arrowFlightLocation]
    console.log(arrowTotalFlightLocation)

    const allAvailablePassages = arrowTotalFlightLocation.map(arrowLocation => arrowLocation.availablePassages)

    return shotRoute.map((arrowPosition, index) => checkArrowRoute(arrowPosition)(allAvailablePassages[index]))
    // return arrowFlight
}


const shotResult = shotAction(0)(6)([17, 5, 1, 3, 6])(map)

console.log(shotResult)